@using X.PagedList;
@using X.PagedList.Mvc.Core
@model IPagedList<BiteBazaarWeb.Models.Product>

<link href="~/css/ViewSpecific/Order.css" rel="stylesheet" />

@{
    ViewData["Title"] = "Index";
}

<div class="order-card">
    <div class="p-3">
        <div class="text-center mb-3">
            <h1>Produktöversikt</h1>
            <div class="mt-3 d-flex justify-content-around align-items-center">
                <p>
                    <a asp-action="Create" class="buttonOwn pink me-4"><i class="bi bi-plus-square"></i> Lägg Till</a>
                    <a asp-action="Index" class="buttonOwn pink">Alla Produkter</a>
                </p>
                <div class="searchbarAdmin">
                    <input type="text" id="searchString" placeholder="Sök produkt..." />
                    <button id="searchButtonAdmin"><i class="bi bi-search"></i></button>
                </div>
            </div>
            
            <div class="container p-4">
                <div class="table-responsive" id="searchContainer">
                   <partial name="_ProductsAdmin" />
                </div>


                <div>
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }), new PagedListRenderOptions
               {
                   Display = PagedListDisplayMode.IfNeeded,
                   DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                   DisplayLinkToLastPage = PagedListDisplayMode.Always,
                   DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                   DisplayLinkToNextPage = PagedListDisplayMode.Always,
                   LiElementClasses = new[] { "page-item" },
                   PageClasses = new[] { "page-link" },
                   ContainerDivClasses = new[] { "pagination", "justify-content-center" }
               })
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
     <script src="/js/AdminProducts.js"></script>          
}